Authenticate using JWT tokens
https://docs.influxdata.com/influxdb/v1.8/administration/authentication_and_authorization/#authenticate-using-jwt-tokens

Passing JWT tokens in each request is a more secure alternative to using passwords. 
This is currently only possible through the InfluxDB HTTP API.

1. Add a shared secret in your InfluxDB configuration file
InfluxDB uses the shared secret to encode the JWT signature. 
By default, shared-secret is set to an empty string, in which case no JWT authentication takes place. 
Add a custom shared secret in your InfluxDB configuration file. 
The longer the secret string, the more secure it is:

[http]
  shared-secret = "my super secret pass phrase"
  
Alternatively, to avoid keeping your secret phrase as plain text in your InfluxDB configuration file, 
set the value with the INFLUXDB_HTTP_SHARED_SECRET environment variable.

2. Generate your token
Use an authentication service to generate a secure token using your InfluxDB username, 
an expiration time, and your shared secret. There are online tools, such as https://jwt.io/, 
that will do this for you.

The payload (or claims) of the token must be in the following format:

{
  "username": "myUserName",
  "exp": 1516239022
}

◦ username - The name of your InfluxDB user.
◦ exp - The expiration time of the token in UNIX epoch time. For increased security, 
keep token expiration periods short. For testing, you can manually generate UNIX timestamps using 
https://www.unixtimestamp.com/index.php.

Encode the payload using your shared secret. You can do this with either a JWT library 
in your own authentication server or by hand at https://jwt.io/.

The generated token follows this format: <header>.<payload>.<signature>

...